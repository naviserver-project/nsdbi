#
# Test Suite
#


package require tcltest 2.2
namespace import -force ::tcltest::*

eval ::tcltest::configure $argv



test basic-syntax.1 {check the basic syntax and arg handling} -body {
    dbi
} -returnCodes error -result {wrong # args: should be "dbi command ?args?"}

test basic-syntax.2 {check the basic syntax and arg handling} -body {
    dbi ?
} -returnCodes error -result {bad command "?": must be 0or1row, 1row, bounce, default, dml, info, pools, releasehandles, rows, or stats}



test pools {list all pools} -body {
    lsort [dbi pools]
} -result {global1 global2 pool1 pool2}


test default {default pool} -body {
    dbi default
} -result pool1



test info.1 {pool info} -body {
    dbi info [dbi default]
} -cleanup {
    unset -nocomplain a
} -result {driver drivername database dbname connections 5}



test stats.1 {pool stats} -body {
     array set a [dbi stats pool1]
     lsort [array names a]
} -cleanup {
    unset -nocomplain a
} -result {agedcloses bounces handlefailures handlegets handlemisses handleopens idlecloses oppscloses queries}



test dml-1 {dml} -body {
    dbi dml {DML 3}
} -result 3

test dml-1 {dml error} -body {
    dbi dml {ROWS 1 1}
} -returnCodes error -result {query was not a DML or DDL command}



test 0or1row-1 {found single column} -body {
    dbi 0or1row {ROWS 1 1 v}
} -result v

test 0or1row-2 {found multiple columns} -body {
    dbi 0or1row {ROWS 1 3 v}
} -result {v v v}

test 0or1row-3 {not found} -body {
    dbi 0or1row {ROWS 0 1}
} -result {}

test 0or1row-4 {no columns} -body {
    dbi 0or1row {ROWS 1 0}
} -returnCodes error -result {driver returned rows but no columns}

test 0or1row-5 {query error} -body {
    dbi 0or1row {ERROR}
} -returnCodes error -result {driver error}



test 1row-1 {found single column} -body {
    dbi 1row {ROWS 1 1 v}
} -result v

test 1row-2 {found multiple columns} -body {
    dbi 1row {ROWS 1 3 v}
} -result {v v v}

test 1row-3 {1row not found} -body {
    dbi 1row {ROWS 0 0}
} -returnCodes error -result "query was not a statement returning rows"

test 1row-4 {query error} -body {
    dbi 1row {ERROR}
} -returnCodes error -result {driver error}


#dbi_releasehandles


test rows-1 {found 1 row, 1 column} -body {
    dbi rows {ROWS 1 1 v}
} -result v

test rows-2 {found 1 row, 3 columns} -body {
    dbi rows {ROWS 1 3 v}
} -result {v v v}

test rows-3 {found 2 rows, 1 column} -body {
    dbi rows {ROWS 2 1 v}
} -result {v v}

test rows-4 {no rows} -body {
    dbi rows {ROWS 0 0}
} -result {}

test rows-5 {query error} -body {
    dbi rows {ERROR}
} -returnCodes error -result {driver error}



test pool-global {query from non-default global pool} -body {
    dbi rows -pool global1 {ROWS 1 1 v}
} -result v


test poolhandle-1 {cache pool pointer in pool name obj} -body {
    set poolname pool1
    dbi rows -pool $poolname {ROWS 1 1}
    dbi rows -pool $poolname {ROWS 1 1}
    set poolname
} -result pool1



test bindvars-1 {bind vars} -body {
    dbi rows {ROWS 1 2 :foo :bar}
} -result {{0:foo 1:bar} v}

test bindvars-2 {duplicate bind vars} -body {
    dbi rows {ROWS 1 2 :foo :bar :foo}
} -result {{0:foo 1:bar 0:foo} v}

test bindvars-3 {quoted bind var} -body {
    dbi rows {ROWS 1 2 query ':foo' query}
} -result {{query ':foo' query} v}

test bindvars-4 {quoted bind var string 0, end-1} -body {
    dbi rows {ROWS 1 2 ':foo'}
} -result {':foo' v}

test bindvars-5 {quoted bind var with spaces} -body {
    dbi rows {ROWS 1 2 query ' :foo ' query}
} -result {{query ' :foo ' query} v}

test bindvars-6 {double quoted bind var} -body {
    dbi rows {ROWS 1 2 query '':foo'' query}
} -result {{query ''0:foo'' query} v}

test bindvars-7 {exceed max bind vars} -body {
    dbi rows {ROWS 1 1 :1 :2 :3 :4 :5 :6 :7 :8 :9 :10 :11 :12 :13 :14 :15 :16 :17 :18 :19 :20 :21 :22 :23 :24 :25 :26 :27 :28 :29 :30 :31 :32 :33}
} -returnCodes error -result {max bind variables exceeded: 32}



cleanupTests
